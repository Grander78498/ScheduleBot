services:
  web:
    image: python_django
    build: .
    command: python3 manage.py runbot
    volumes:
      - .:/app/
    env_file: .env.prod
    environment:
      - DEBUG=0
      - PG_HOST=pgdb
      - CELERY_BROKER=redis://redis:6379
      - CELERY_BACKEND=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    image: pgvector/pgvector:pg17
    environment:
      - POSTGRES_DB=project_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGUSER=postgres
    container_name: pgdb
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 3s
      retries: 3


  celery-beat:
    image: python_django
    pull_policy: never
    command: python3 -m celery --app=django_queue beat --loglevel=info
    volumes:
      - ./project:/app
    env_file: .env
    environment:
      - PG_HOST=pgdb
      - CELERY_BROKER=redis://redis:6379
      - CELERY_BACKEND=redis://redis:6379
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_started

  celery-worker:
    image: python_django
    pull_policy: never
    command: python3 -m celery --app=django_queue worker --loglevel=info
    volumes:
      - ./project:/app
    env_file: .env
    environment:
      - PG_HOST=pgdb
      - CELERY_BROKER=redis://redis:6379
      - CELERY_BACKEND=redis://redis:6379
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_started

  redis:
    image: redis:7-alpine

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/staticfiles
      - media_volume:/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web

volumes:
  pgdbdata:
  static_volume:
  media_volume:
